{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getPosts","a","fetch","response","json","getUserPosts","userId","getPostsDetails","postId","PostsList","selectedPostId","selectedUserId","onPostClick","clearDetails","useState","posts","setPosts","useEffect","fetchPosts","postsFromServer","handleButtons","className","map","post","id","type","onClick","getPostComments","comments","filter","comment","deleteComment","commentId","method","addComment","newComment","name","email","body","headers","JSON","stringify","NewCommentForm","loadComments","setName","setEmail","text","setText","addNewComment","event","preventDefault","placeholder","value","onChange","target","PostDetails","setPost","setComments","isHideComments","setIsHideComments","postComments","getSelectedPost","postDetails","handleTogglerComments","deleteSelectedComment","title","length","App","setSelectedUser","setSelectedPostId","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b602df5b.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport async function getPosts() {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n}\n\nexport async function getUserPosts(userId: number) {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return response.json();\n}\n\nexport async function getPostsDetails(postId: number) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { getUserPosts, getPosts } from '../../api/posts';\n\ntype Props = {\n  selectedUserId: number;\n  selectedPostId: number | null,\n  onPostClick: (postId: number) => void,\n  clearDetails: () => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedPostId,\n  selectedUserId,\n  onPostClick,\n  clearDetails,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let postsFromServer;\n\n      if (selectedUserId) {\n        postsFromServer = await getUserPosts(selectedUserId);\n      } else {\n        postsFromServer = await getPosts();\n      }\n\n      setPosts(postsFromServer);\n    };\n\n    fetchPosts();\n  }, [selectedUserId]);\n\n  const handleButtons = (postId: number) => {\n    if (selectedPostId === postId) {\n      clearDetails();\n    } else {\n      onPostClick(postId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              sunt aut facere repellat provident occaecati excepturi optio\n            </div>\n            {selectedPostId === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => handleButtons(post.id)}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => handleButtons(post.id)}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport async function getPostComments(postId: number): Promise<PostComment[]> {\n  const response = await fetch(`${BASE_URL}/comments`);\n\n  const comments = await response.json();\n\n  return comments.filter((comment: PostComment) => comment.postId === postId);\n}\n\nexport async function deleteComment(commentId: number) {\n  const response = await fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n\n  return response.json();\n}\n\nexport async function addComment(newComment: Pick<PostComment, 'postId' | 'name' | 'email' | 'body'>) {\n  const {\n    postId, name, email, body,\n  } = newComment;\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json;charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  selectedPostId: number,\n  loadComments: () => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ selectedPostId, loadComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [text, setText] = useState('');\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangeText = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(event.target.value);\n  };\n\n  const clearInputs = () => {\n    setName('');\n    setEmail('');\n    setText('');\n  };\n\n  const addNewComment = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    await addComment({\n      postId: selectedPostId,\n      name,\n      email,\n      body: text,\n    });\n\n    loadComments();\n\n    clearInputs();\n  };\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={handleChangeEmail}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={text}\n          onChange={handleChangeText}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={addNewComment}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPostsDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<PostComment[]>([]);\n  const [isHideComments, setIsHideComments] = useState(false);\n\n  const loadComments = async () => {\n    const postComments = await getPostComments(selectedPostId);\n\n    setComments(postComments);\n  };\n\n  useEffect(\n    () => {\n      const getSelectedPost = async () => {\n        const postDetails = await getPostsDetails(selectedPostId);\n\n        setPost(postDetails);\n      };\n\n      if (selectedPostId) {\n        getSelectedPost();\n        loadComments();\n      }\n    },\n    [selectedPostId],\n  );\n\n  const handleTogglerComments = () => {\n    setIsHideComments(!isHideComments);\n  };\n\n  const deleteSelectedComment = async (commentId: number) => {\n    await deleteComment(commentId);\n    loadComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {isHideComments\n          ? (\n            <button\n              type=\"button\"\n              className=\"button PostDetails__show-button\"\n              onClick={handleTogglerComments}\n            >\n              {`Show ${comments.length === 1\n                ? '1 comment'\n                : `${comments.length} comments`\n              }`}\n            </button>\n          )\n          : (\n            <>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={handleTogglerComments}\n              >\n                {`Hide ${comments.length === 1\n                  ? '1 comment'\n                  : `${comments.length} comments`\n                }`}\n              </button>\n\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteSelectedComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm selectedPostId={selectedPostId} loadComments={loadComments} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState<number | null>(null);\n\n  const onPostClick = (postId: number) => {\n    setSelectedPostId(postId);\n  };\n\n  const clearDetails = () => {\n    setSelectedPostId(null);\n  };\n\n  const handleUserSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"users\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            id=\"users\"\n            value={selectedUserId}\n            onChange={handleUserSelection}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            onPostClick={onPostClick}\n            clearDetails={clearDetails}\n            selectedUserId={selectedUserId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {selectedPostId && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}